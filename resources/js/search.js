window.__DOCS_SEARCH__ = [[{"i":"#","p":["This site is a personal knowledge base and lab journal as I deepen my expertise in enterprise networking and share what I learn with others."]},{"l":"Welcome"},{"l":"About Me","p":["My name is Chad and I'm an Enterprise Network Engineer for Sub-Zero, Wolf, & Cove. While being born and raised in the Twin Cities, I've been based out of Scottsdale, AZ since late 2023. I have a CCNP: Enterprise with a concentration in Advanced Routing and Services (ENARSI). When I'm not working or in my lab, you can find me hiking, traveling, or out by the pool.","This site and the labs within are currently unfinished and a work-in-progress. Cloning my GitHub in its current state will not result in the full experience. Check back soon for the finished version of my first lab set, Shrimp Co."]},{"l":"What You'll Find Here"},{"l":"Network Academy","p":["This project is built around Containerlab and modern network simulation workflows. You’ll progress from basic VLANs to complex multi-site architectures through practical, hands-on labs designed for clarity, realism, and growth.","Beginner-friendly progression from Layer 2 to Dynamic Layer 3","Real-world scenarios with Linux hosts and containerized network OSs","Modern, scalable lab environment","Clear objectives, success criteria, and stretch goals"]},{"l":"Other Labs & Experiments","p":["Standalone labs where I explore automation, emerging technologies, and advanced routing designs."]},{"l":"Technical Blog","p":["Deep dives into network concepts, troubleshooting notes, and lessons from real-world projects."]},{"l":"Resources & Tools","p":["A curated collection of the tools, platforms, and applications I use regularly as a network engineer."]},{"l":"Lab Environment","p":["All labs are designed for Containerlab— a lightweight network simulation platform that runs real NOS images in Docker containers. Learn more and get started here.","Happy networking!\uD83D\uDE80"]},{"l":"Recent Updates 7/22","p":["Migrated website to Cloudflare!","Purchased network-chadmin.com domain","Changed Network Academy to use exclusively Arista cEOS instead of Cisco IOL"]}],[{"l":"Getting Started"},{"l":"Requirements","p":["Labs I publish here use Containerlab, a free network lab solution developed by engineers at Nokia. It doesn't require a costly subscription, and in my experience, it's more resource-efficient, more reliable, and a lot more enjoyable than the emulators of years past.","Containerlab installed on a Linux PC, Server, WSL or on a Macbook. The labs here have been built and tested on Ubuntu server 24.04.2 LTS.","Lab images— at the time of writing, I'm using Cisco IOL, Cisco IOL-L2, and Arista cEOS.","Lab files available on my GitHub"]},{"l":"Installing Containerlab","p":["Run the command:","This will install all components needed to run Containerlab, including Docker. See detailed or alternate installation instructions here."]},{"l":"Images"},{"l":"Cisco IOL","p":["IOL can be acquired from Cisco after purchasing a CML subscription and extracting the image file from the refplat ISO. You may be able to find it via other avenues, but this is what I did as I know I'm getting the safest and most up-to-date image. This is technically a VM and not a Container natively so you'll need to use vrnetlab to import the images into Docker."]},{"l":"Network-Host","p":["This is a custom Ubuntu host with a few extra packages installed like sudo, iperf3, tcp dump, traceroute, curl, nginx, and more. Containerlab will pull this image from Docker when you run your first lab."]},{"l":"Arista cEOS","p":["Arista offers these images for free once you've created an account. Navigate to \"Support → Software Download → cEOS Lab → 4.33 → cEOS64-lab-4.33.3F.tar.xz\"","This is the cEOS version I'll be using in my labs"]},{"l":"Lab files","p":["Clone the repo containing all my labs/courses:","Cloning the repo above will download all the necessary lab files to start, assuming you've acquired the proper images. Move to the directory with your desired lab's YAML file in it:","Then go ahead and launch your lab:","For a more in-depth look at how to administer Containerlab and Docker see my Containerlab Reference guide."]}],[{"l":"Resources","p":["This is a collection of my favorite tools, applications, learning platforms and more that I use in my day-to-day life as a Network Engineer."]},{"l":"Terminal","p":["SecureCRT- Still the best Terminal emulator in the game in my opinion. Has every feature you could possibly look for and then some. It's subscription-based for updates, but once your subscription is up, you can continue using the version you're on indefinitely.","iTerm2- Replaces the default terminal on Mac. Offers more options, flexibility, and customization. Howver, just like SecureCRT, I've probably utilized 10% of what it is actually capable of.","MobaXterm- Not a program I've used recently but a very solid choice when it comes to a full-featured terminal emulator. Windows only."]},{"l":"Diagrams & Documentation","p":["Visio- As I work primarily on a MacBook, I no longer use Visio. However when it comes to power and flexibility, Visio is still king. My best looking diagrams have come from Visio but the learning curve is higher and there's an infinite amount of customization you can do. Do you need that much power?","draw.io- I've moved to draw.io as my diagram solution of choice since it's FOSS, supports exporting to several formats, is sufficiently powerful, and supports git. In a world where everything is a subscription, great quality free software is gold. I recommend any prospective network engineer learn how to make great diagrams, and draw.io is a wonderful application to learn.","Lucid Chart- Great solution for cross-platform diagrams, but it comes at the cost of a montly subscription. Gentler learning curve than Visio, but capable of similarly in-depth diagrams.","Excalidraw- The king of quick diagrams and white-boarding sessions. If I need visualize something quickly or I'm asked to provide a diagram for something small, Excalidraw is my first choice."]},{"l":"Apps","p":["Obsidian- My note-taking program and personal knowledge-base. It's cross-platform, incredibly polished, and highly extensible with plugins. All notes are stored in markdown local to your machine. One of my all time favorite apps.","Raindrop.io- I use this to store bookmarks on the web so I'm not locked into a single web browser.","Visual Studio Code- My personal favorite text editor. Well-supported, powerful, and extensible with Github integration. There's an awesome Containerlab plugin that will free you from the Linux command line, generate diagrams, and more.","Wireshark- Needs no introduction. It's an engineers best friend and one of the best ways to really learn how this all works.","Claude- My LLM of choice. I've had the best luck with Claude when it comes to the accuracy of it's technical knowledge."]},{"l":"Labs","p":["Containerlab- The platform that inspired me to create this site in the first place. Network Emulators like VIRL, GNS3, and EVE-NG were game changers for learning networking, as you no longer had to have a stack of hardware running in your office. In my opinion, Containerlab is an evolution and the next best thing."]}],[{"i":"#","p":["Master networking fundamentals with hands-on labs and enterprise-inspired designs."]},{"l":"What is Network Academy?","p":["Network Academy started with a simple goal: help colleagues who were new to networking learn through hands-on labs. What began as internal training material has since grown into a public resource for anyone looking to build real skills through practice.","I believe labbing — and learning to enjoy labbing — is the secret to success in this field. My goal isn’t just to teach networking concepts, but to inspire you to build your own labs and take ownership of your learning."]},{"l":"Shrimp Co. - Network Fundamentals","p":["Shrimp Co. was the original inspiration behind Network Academy and the reason this site exists today.","This course begins with a simple single-switch setup and two VLANs, gradually expanding into a full-scale topology with dynamic routing, tunneling, and multiple Linux hosts.","While it's designed with beginners in mind, even seasoned learners will find value in advanced stretch goals like Linux administration and network services."]},{"l":"SeaMart - Zero to Routing Hero","p":["Routing is a core skill in computer networking. Mastering it not only makes you a more valuable engineer, but it’s essential for those pursuing design and architecture roles.","In the SeaMart series, you’ll step into the role of a Campus and WAN engineer for a seafood retail chain. You’ll handle greenfield deployments, brownfield migrations, and real-world troubleshooting as you work toward routing mastery.","Starting with basic static and dynamic routing, you'll gradually build a large-scale routed environment—incorporating advanced concepts like mutual redistribution and route filtering along the way."]}],[{"l":"Shrimp Co.","p":["An exploration in networking, from basic L2 to dynamic L3 tunneling"]},{"l":"Welcome to Shrimp Co.","p":["This is my beginner friendly lab series where you play the role of network administrator for Shrimp Co, a growing company based out of Seattle, WA. You'll start with a single network closet and basic layer 2 connectivity, slowly increasing the size and complexity of your network as the series goes on. Eventually. we'll build up to large headquarters incorporating several layers of redundancy, dynamic routing, and a basic WAN."]},{"l":"Philosophy","p":["Each lab will build on the one before it, utilizing the same network devices while adding new hardware, and new protocols/technologies. While some configuration will be pre-existing, you'll be configuring the devices from scratch each time. This allows you to become familiar with the network as you would one you work in, and develop important muscle memory on the command-line.","Shrimp Co. is aimed at beginners to computer networking or IT professionals looking to ramp up their understanding of enterprise networking concepts. While it is beginner friendly, basic understanding of networking, Cisco CLI, and Linux will be helpful. Structure, goals, and tips are given, but research of the protocols and configuration are left up to the engineer. Helpful white papers are linked in the reference section of each lab."]},{"l":"Before you start","p":["Navigate to your ~/containerlab directory and pull the latest updates from the repository with git pull origin main and if you don't have the repo cloned yet visit Getting Started.","If you have SecureCRT make sure to upload the .xml file included in the repo for SSH sessions and commands.","The docker management subnet for this set of labs is 172.20.25.0/24; in order for the SSH sessions to work you'll either need a route with a next-hop of your Ubuntu host or if you're using my SecureCRT sessions you can use an existing session as a jump host:","Create a session to for your Ubuntu host with automated login and choose it here for every session.","Every device has a different management address, even ones with the same hostname between labs. This was done incase the labs are being run on a server with multiple users and allows multiple labs to be run without conflict, except for two of the same lab. s","Each device tag has both the Docker management IP address, and the in-lab management IP address. Both will be shown on the device tags on each lab topology.","172.16.25.62 is the docker management IP, while 10.1.99.30 is the one you will configure in-lab.","Emulated networks like these can be buggy at times and certain things that may not work exactly like they do on a physical device. An example of this is if SW1 Eth0/1 <---> Eth0/1 SW2 are connected and you shut down Eth0/1 on SW1, the Line Protocol would go down on the SW2 side in the real world, but that won't happen with these emulated devices. If your network isn't working how you think it should, these things do get goofy sometimes","Have fun and reach out to me at heetland.chad@gmail.com for any comments, questions, or feedback!"]}],[{"i":"lab-1----vlans","l":"Lab 1 - VLANs","p":["Shrimp Co. is opening their first office in Seattle, WA, and you're hired as their network administrator. The switch is racked in IDF-A and it's up to you to set up basic layer 2 segmentation"]},{"l":"Lab Topology"},{"l":"Configuration Tasks"},{"l":"VLAN Configuration","p":["Create and configure the following VLANs:","VLAN 10- Sales Department","VLAN 20- Engineering Department","VLAN 99- Network Management"]},{"l":"Host IP Addresses & Switchport Assignment","p":["Host","Interface","IP Address","VLAN Assignment","Bob","Eth0/1","10.1.10.10/24","10 (Sales)","Linda","Eth0/2","10.1.10.20/24","Alice","Eth0/3","10.1.20.10/24","20 (Engineering)"]},{"l":"Success Criteria"},{"l":"Primary Goals","p":["Connectivity Test: Bob and Linda can ping each other (same VLAN)","Isolation Test: Alice cannot ping Bob or Linda (different VLANs)"]},{"l":"Stretch Goals","p":["Add descriptive port descriptions to all switchports","Configure VLAN 99 management interface (10.1.99.10/24)","Make host IP configurations persistent across reboots"]},{"l":"Verification Commands"},{"l":"Key Concepts"},{"l":"Why VLANs Matter","p":["Security: Network segmentation isolates traffic","Broadcast Control: Reduces broadcast domain size","Organization: Logical grouping of devices"]},{"l":"Understanding the Topology"},{"l":"Questions to Explore","p":["What happens when you send a broadcast in VLAN 10?","How does the switch learn where each host is located?","Why might VLAN 99 SVI show \"status down\" initially?","Can't SSH to hosts? Use: docker exec -it container-name bash","Set static IP: sudo ip addr add 10.1.10.10/24 dev eth1"]}],[{"l":"Lab 2 - Trunks","p":["Construction of IDF-B on the second floor is finished. Configure the new switch and ensure layer 2 is properly spanned between floors."]},{"l":"Lab Topology"},{"l":"Configuration Tasks"},{"l":"VLAN Configuration","p":["Create and configure the following VLANs on both switches:","VLAN 10- Sales Department","VLAN 20- Engineering Department","VLAN 99- Network Management"]},{"l":"Host & Access Port Configuration","p":["10 (Sales)","10.1.10.10/24","10.1.10.20/24","10.1.20.10/24","10.1.20.20/24","20 (Engineering)","Alice","Bob","Eth0/1","Eth0/2","Host","Interface","IP Address","Linda","Steve","VLAN Assignment"]},{"l":"Switchport Configuration","p":["Configure the inter-switch link (Eth0/3 on both switches) as an 802.1Q trunk to carry only VLANs 10,20, and 99.","Configure VLAN 99 SVI for sea-a1-asw1 - 10.1.99.10/24","Configure VLAN 99 SVI for sea-a1-asw1 - 10.1.99.20/24"]},{"l":"Success Criteria","p":["Bob and Linda can ping each other (both in VLAN 10)","Alice cannot ping Bob or Linda (Different VLANs)","sea-a1-asw1 can ping sea-b1-asw1 VLAN 99 SVI","Steve can both VLAN SVIs","VLAN database consistent across both switches","SSH to sea-a1-asw1 from Steve","SSH to sea-b1-asw1 from sea-a1-asw1","Configure port descriptions for all interfaces"]},{"l":"Verification Commands"},{"l":"Questions to Explore","p":["Why do we need trunks? What problem do they solve?","Why do we specify the VLANs on a trunk instead of allowing all?","Run show spanning-tree vlan 10 before and after you remove it from the trunk on one side, what changes?","If Linda can't ping Bob, what are the possible causes?","If SSH isn't working: docker exec -it container-name bash","Configure static IP: sudo ip addr add 10.1.10.10/24 dev eth1"]}],[{"l":"Lab 3 - Router-on-a-stick","p":["Users are complaining they can't access servers in other departments. Deploy a router-on-a-stick solution to enable communication between VLANs"]},{"l":"Lab Topology"}],[{"l":"Lab 4 - Basic L2-L3 Redundancy","p":["As Shrimp Co. grows, network reliability becomes critical. Deploy HSRP and EtherChannel to eliminate single points of failure in your network design."]},{"l":"Lab Topology"}],[{"l":"Lab 5 - Static NAT & Internet","p":["Connect Shrimp Co. to the internet via Volt Communications. Configure static NAT to allow employees to access SeaMart's vendor portal for daily business operations."]},{"l":"Lab Topology"}],[{"l":"Lab 6 - Static Routing","p":["Shrimp Co. needs centralized routing and improved NAT efficiency. Configure distribution layer gateways with static routes and dynamic NAT for scalable internet access."]},{"l":"Lab Topology"}],[{"l":"Lab 7 - PAT & Dynamic Routing","p":["Shrimp Co. requires enterprise-grade infrastructure for reliable operations. Implement full redundancy with dual distribution switches, OSPF dynamic routing, and PAT for scalable internet access."]},{"l":"Lab Topology"}],[{"l":"Lab 8 - STP, Summarization,& DHCP","p":["Shrimp Co.'s growing workforce requires streamlined network operations. Optimize STP for efficient redundancy, implement route summarization for scalability, and deploy DHCP for simplified device management."]},{"l":"Lab Topology"}],[{"l":"Lab 9 - Multiarea OSPF & GRE","p":["Shrimp Co. is opening remote offices in Milwaukee and New Orleans. Implement multi-area OSPF for scalable routing and configure GRE tunnels to connect all locations over the internet."]},{"l":"Lab Topology"}],[{"l":"SeaMart"}],[{"l":"Containerlab Reference Guide"},{"l":"Deployment Commands","p":["Command","Description","containerlab deploy","Deploy lab (must in directory with lab file.)","containerlab deploy -t lab-name.clab.yml","Deploy specific lab file.","containerlab deploy --reconfigure","Deploy lab with fresh set of files (config/TLS/etc.)","clab dep","Deploy a lab using alias's"]},{"l":"Management Commands","p":["Command","Description","containerlab inspect","Show running lab in local directory","containerlab inspect -it labfile.clab.yml","Show specific lab","containerlab inspect -a","Show all labs","containerlab destroy -t labfile.clab.yml","Destroy specific lab","containerlab destroy -t labfile.clab.yml --cleanup","Destroy lab and delete extra lab file","containerlab save -t labfile.clab.yml","Save node configurations from specific lab"]},{"l":"Docker Commands for Management","p":["Command","Description","docker ps","List running containers","docker restart container","Restart container","docker stop container","Stop container","docker rm container","Remove container"]},{"l":"Container Access","p":["Command","Description","docker exec -it container bash","Access container bash shell","docker exec -it container Cli","Access container CLI (Arista)"]},{"l":"Image Management","p":["Command","Description","docker images","List available images","docker rmi image","Remove an image","docker pull image","Attempt to download image from Docker","docker import file name:tag","Import image from file"]}],[{"l":"Technical Blog"}],[{"l":"Test Blog Post"}]];